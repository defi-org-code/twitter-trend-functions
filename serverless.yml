service: ${env:GITHUB_REPO_NAME}

custom:
  PROJECT: Twitter DEFI trend functions

provider: ${file(./serverless-provider.yml)}

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

package:
  patterns:
    - '!*'
    - '!*/**'
    - 'dist/*'
    - 'dist/*/**'

stepFunctions:
  stateMachines:
    iteratble_writer_saveTopEntities:
      events:
        - schedule: rate(1 minute) # examples: rate(1 minute), rate(60 minutes)
      definition:
        StartAt: Iterator
        States:
          Iterator:
            Type: Task
            Resource:
              Fn::GetAtt: [writer_saveTopEntities, Arn]
            ResultPath: "$.taskresult"
            Next: IsCountReached
          IsCountReached:
            Type: Choice
            Choices:
              - Variable: "$.taskresult.continue"
                BooleanEquals: true
                Next: Wait
            Default: Done
          Wait:
            Type: Wait
            Seconds: 3
            Next: Iterator
          Done:
            Type: Pass
            End: true

functions:
  writer_saveTopEntities:
    handler: dist/index.writer_saveTopEntities
    fileSystemConfig: ${file(./serverless-fs.yml)}
  writer_cleanAndSavePeriodTopEntities:
    handler: dist/index.writer_cleanAndSavePeriodTopEntities
    timeout: 60
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - schedule: cron(59 23 * * ? *) # examples: rate(1 minute), rate(60 minutes), cron(0 12 * * ? *)
  reader_fetchTopEntities:
    handler: dist/index.reader_fetchTopEntities
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: fetchTopEntities
          method: get
          cors: true
  reader_fetchPeriodTopEntities:
    handler: dist/index.reader_fetchPeriodTopEntities
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: fetchPeriodTopEntities
          method: get
          cors: true
  reader_fetchTweetsByTag:
    handler: dist/index.reader_fetchTweetsByTag
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: fetchTweetsByTag/{filter}/{sinceId}
          method: get
          cors: true
      - http:
          path: fetchTweetsByTag/{filter}
          method: get
          cors: true
  writer_cleanDB:
    handler: dist/index.writer_cleanDB
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: cleanDB/{param}/{secret}
          method: get
          cors: true
  writer_manageUsersLists:
    handler: dist/index.writer_manageUsersLists
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: manageList/{param}/{list}/{users}/{secret}
          method: get
          cors: true